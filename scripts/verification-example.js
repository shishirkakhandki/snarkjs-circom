const snarkjs = require("snarkjs");
const fs = require("fs");

async function verifySnarkProof() {
  try {
    const vKey = JSON.parse(fs.readFileSync("../verification_key.json"));
    const publicSignals = [
      "17853941289740592551682164141790101668489478619664963356488634739728685875777",
    ];
    const proof = {
      pi_a: [
        "8979275590067410228096682881582968779282317676482094325486401052234669635409",
        "16979161529737604748560643675157857917606098722828135164607604393584347123385",
        "1",
      ],
      pi_b: [
        [
          "12451150974009507332318365773610979392287339725121687728349742513223524752349",
          "9604813067724202738677452468500245019137568496878593141045411882156105241664",
        ],
        [
          "20339689033510362471152760171054744047896153339971528915313865618420441398233",
          "19839810871166312584651225658306113841404060604177932555657849051347036170637",
        ],
        ["1", "0"],
      ],
      pi_c: [
        "16178834669125925052059691602967603526975897648008605798335537188141320913207",
        "8592134851319390740667523246749615682825315922236701122157441571681728488383",
        "1",
      ],
      protocol: "groth16",
      curve: "bn128",
    };
    const res = await snarkjs.groth16.verify(vKey, publicSignals, proof);

    if (res === true) {
      console.log("Verification OK");
    } else {
      console.log("Invalid proof");
    }
  } catch (error) {
    console.error("An error occurred:", error);
  }
}

verifySnarkProof();
